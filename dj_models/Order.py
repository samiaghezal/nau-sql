class Order(models.Model):
    id = models.ID()
    externalId = models.String()
    externalSource = models.String()
    orderSource = models.OrderOrderSource()
    seller = models.Seller()
    created = models.DateTime()
    updated = models.DateTime()
    status = models.OrderStatus()
    subStatus = models.OrderSubStatus()
    user = models.User()
    languageCode = models.String()
    trackingClientId = models.String()
    billingAddress = models.Address()
    shippingAddress = models.Address()
    vatCode = models.String()
    euInvoiceMessaging = models.String()
    vatIdentificationNumber = models.String()
    mpVatIdentificationNumber = models.String()
    currency = models.String()
    shippingMethod = models.ShippingMethod()
    shippingMethodName = models.String()
    shippingPrice = models.TaxedMoney()
    isShippingPriceOverridden = models.Boolean()
    token = models.String()
    voucher = models.Voucher()
    discount = models.Money()
    discountName = models.String()
    translatedDiscountName = models.String()
    displayGrossPrices = models.Boolean()
    customerNote = models.String()
    weight = models.Weight()
    importedAt = models.DateTime()
    privateMetadata = models.MetadataItem()
    metadata = models.MetadataItem()
    fulfillments = models.Fulfillment()
    fees = models.OrderFee()
    lines = models.OrderLine()
    allowedSubStatuses = models.OrderSubStatusEnum()
    availableShippingMethods = models.ShippingMethod()
    invoices = models.Invoice()
    number = models.String()
    marketplaceOrderNumber = models.String()
    isPaid = models.Boolean()
    paymentStatus = models.PaymentChargeStatusEnum()
    paymentStatusDisplay = models.String()
    total = models.TaxedMoney()
    originalTotal = models.TaxedMoney()
    subtotal = models.TaxedMoney()
    statusDisplay = models.String()
    canFinalize = models.Boolean()
    events = models.OrderEvent()
    userEmail = models.String()
    isShippingRequired = models.Boolean()
    payoutStatus = models.OrderPayoutStatusEnum()
    payoutsSummary = models.OrderPayoutSummary()
    availablePayoutBalance = models.Money()
    sellerCommission = models.Money()
    volumeDiscount = models.TaxedMoney()
    validationStatus = models.ValidationStatus()
    isOnlySellerOnNauticalOrder = models.Boolean()
    marketplaceOrder = models.NauticalOrder()
    vendorPayout = models.VendorPayout()
    vendorPayouts = models.VendorPayout()

