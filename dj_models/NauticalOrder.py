class NauticalOrder(models.Model):
    id = models.ID()
    externalId = models.String()
    externalSource = models.String()
    orderSource = models.NauticalOrderOrderSource()
    created = models.DateTime()
    updated = models.DateTime()
    status = models.NauticalOrderStatus()
    subStatus = models.NauticalOrderSubStatus()
    user = models.User()
    languageCode = models.String()
    trackingClientId = models.String()
    billingAddress = models.Address()
    shippingAddress = models.Address()
    currency = models.String()
    isMarketplaceShippingPriceOverridden = models.Boolean()
    shippingPrice = models.TaxedMoney()
    euInvoiceMessaging = models.String()
    vatIdentificationNumber = models.String()
    mpVatIdentificationNumber = models.String()
    token = models.String()
    voucher = models.Voucher()
    shippingDiscount = models.Money()
    discount = models.Money()
    discountName = models.String()
    translatedDiscountName = models.String()
    displayGrossPrices = models.Boolean()
    customerNote = models.String()
    weight = models.Weight()
    importedAt = models.DateTime()
    poNumbers = models.String()
    privateMetadata = models.MetadataItem()
    metadata = models.MetadataItem()
    availableMarketplaceShippingMethods = models.ShippingMethod()
    sellerFulfillments = models.Fulfillment()
    allowedSubStatuses = models.OrderSubStatusEnum()
    sellerUnfulfilled = models.OrderLine()
    lines = models.NauticalOrderLine()
    actions = models.OrderAction()
    availableShippingMethodsBySeller = models.MultiSellerShippingMethod()
    invoices = models.Invoice()
    number = models.String()
    isPaid = models.Boolean()
    paymentStatus = models.PaymentChargeStatusEnum()
    paymentStatusDisplay = models.String()
    payments = models.Payment()
    total = models.TaxedMoney()
    subtotal = models.TaxedMoney()
    statusDisplay = models.String()
    canFinalize = models.Boolean()
    validationStatus = models.ValidationStatus()
    totalAuthorized = models.Money()
    totalCaptured = models.Money()
    totalRefunded = models.Money()
    events = models.NauticalOrderEvent()
    totalBalance = models.Money()
    userEmail = models.String()
    isShippingRequired = models.Boolean()
    volumeDiscount = models.TaxedMoney()
    shippingMethodName = models.String()
    subOrders = models.Order()
    refunds = models.Refund()
    marketplaceShippingPrice = models.TaxedMoney()
    marketplaceShippingMethod = models.ShippingMethod()
    marketplaceShippingMethodName = models.String()

